USE FuzzyKnights
GO

--	CREATE SCHEMA ImageDB
--	GO

IF OBJECT_ID('ImageDB.FrameImage') IS NOT NULL DROP TABLE ImageDB.FrameImage;
IF OBJECT_ID('ImageDB.SequenceFrame') IS NOT NULL DROP TABLE ImageDB.SequenceFrame;
IF OBJECT_ID('ImageDB.AnimationPoolSequence') IS NOT NULL DROP TABLE ImageDB.AnimationPoolSequence;

IF OBJECT_ID('ImageDB.[Image]') IS NOT NULL DROP TABLE ImageDB.[Image];
IF OBJECT_ID('ImageDB.Frame') IS NOT NULL DROP TABLE ImageDB.Frame;
IF OBJECT_ID('ImageDB.[Sequence]') IS NOT NULL DROP TABLE ImageDB.[Sequence];
IF OBJECT_ID('ImageDB.[Namespace]') IS NOT NULL DROP TABLE ImageDB.[Namespace];
IF OBJECT_ID('ImageDB.AnimationPool') IS NOT NULL DROP TABLE ImageDB.AnimationPool;
IF OBJECT_ID('ImageDB.ReferenceType') IS NOT NULL DROP TABLE ImageDB.ReferenceType;

CREATE TABLE ImageDB.[Image] (
	ImageID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,

	[Base64] VARBINARY(MAX) NOT NULL,
	Width REAL NULL,
	Height REAL NULL,
	Tags NVARCHAR(255) NULL,

	UUID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
);

CREATE TABLE ImageDB.Frame (
	FrameID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,

	Name VARCHAR(255) NULL,
	Tags NVARCHAR(255) NULL,

	UUID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
);

CREATE TABLE ImageDB.[Sequence] (
	SequenceID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,

	Name VARCHAR(255) NULL,
	Tags NVARCHAR(255) NULL,

	UUID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
);

CREATE TABLE ImageDB.AnimationPool (
	AnimationPoolID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,

	Name VARCHAR(255) NULL,
	Tags NVARCHAR(255) NULL,

	UUID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
);

CREATE TABLE ImageDB.[Namespace] (
	NamespaceID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	ParentNamespaceID INT NULL FOREIGN KEY REFERENCES ImageDB.[Namespace] (NamespaceID),

	Name VARCHAR(255) NULL,

	UUID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
);

CREATE TABLE ImageDB.ReferenceType (
	ReferenceTypeID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,

	Code VARCHAR(255) NULL UNIQUE,
	Label NVARCHAR(255) NULL,
	
	[Schema] VARCHAR(255) NULL,
	[Table] VARCHAR(255) NULL,

	UUID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
);
INSERT INTO ImageDB.ReferenceType (Code, Label, [Schema], [Table])
VALUES
	('IMAGE', 'Image', 'ImageDB', 'Image'),
	('FRAME', 'Frame', 'ImageDB', 'Frame'),
	('SEQUENCE', 'Sequence', 'ImageDB', 'Sequence'),
	('ANIM_POOL', 'Animation Pool', 'ImageDB', 'AnimationPool');




CREATE TABLE ImageDB.FrameImage (
	FrameImageID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,

	FrameID INT NULL FOREIGN KEY REFERENCES ImageDB.[Frame] (FrameID),
	ImageID INT NULL FOREIGN KEY REFERENCES ImageDB.[Image] (ImageID),
	
	Scale REAL NOT NULL DEFAULT 1.0,
	Rotation REAL NOT NULL DEFAULT 0.0,
	OffsetX INT NOT NULL DEFAULT 0,
	OffsetY INT NOT NULL DEFAULT 0,
	ZIndex INT NOT NULL DEFAULT 0,

	UUID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
);

CREATE TABLE ImageDB.SequenceFrame (
	SequenceFrameID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	
	SequenceID INT NULL FOREIGN KEY REFERENCES ImageDB.[Sequence] (SequenceID),
	FrameID INT NULL FOREIGN KEY REFERENCES ImageDB.[Frame] (FrameID),

	Duration INT NOT NULL DEFAULT 0,
	Ordinality INT NOT NULL DEFAULT 0,

	UUID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
);

CREATE TABLE ImageDB.AnimationPoolSequence (
	AnimationPoolSequenceID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	
	AnimationPoolID INT NULL FOREIGN KEY REFERENCES ImageDB.[AnimationPool] (AnimationPoolID),
	SequenceID INT NULL FOREIGN KEY REFERENCES ImageDB.[Sequence] (SequenceID),

	[Weight] INT NOT NULL DEFAULT 1,

	UUID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
);